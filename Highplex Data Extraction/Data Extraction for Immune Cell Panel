#Extracts data regarding number of different cell types without double positives, number of double and triple positives. It also gives these numbers in different regiosn - tumour and stroma. 

import os
import pandas as pd
from openpyxl import load_workbook
from tkinter import Tk
from tkinter.filedialog import askopenfilenames

# Initialize Tkinter root
root = Tk()
root.withdraw()  # Hide the root window

# Open file dialog to select files
file_paths = askopenfilenames(
    title="Select CSV files",
    filetypes=[("CSV files", "*.csv"), ("All files", "*.*")]
)

# Initialize a list to store results for each file
all_results = []

for file_path in file_paths:
    # Load the CSV file
    df = pd.read_csv(file_path)
    
    filters = {
        'all_cells': (df['Cy5_PanCK Positive Classification'] >= 0) & 
                      (df['Gold_CD19 Positive Classification']  >= 0) & 
                      (df['Green#2_CD3 Positive Classification'] >= 0) & 
                      (df['NarrowRed_CD68 Positive Classification'] >= 0),
       
        'PanCK_only': (df['Cy5_PanCK Positive Classification'] > 0) & 
                      (df['Gold_CD19 Positive Classification'] == 0) & 
                      (df['Green#2_CD3 Positive Classification'] == 0) & 
                      (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'CD19_only': (df['Cy5_PanCK Positive Classification'] == 0) & 
                    (df['Gold_CD19 Positive Classification'] > 0) & 
                    (df['Green#2_CD3 Positive Classification'] == 0) & 
                    (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'CD3_only': (df['Cy5_PanCK Positive Classification'] == 0) & 
                    (df['Gold_CD19 Positive Classification'] == 0) & 
                    (df['Green#2_CD3 Positive Classification'] > 0) & 
                    (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'CD68_only': (df['Cy5_PanCK Positive Classification'] == 0) & 
                     (df['Gold_CD19 Positive Classification'] == 0) & 
                     (df['Green#2_CD3 Positive Classification'] == 0) & 
                     (df['NarrowRed_CD68 Positive Classification'] > 0),
                     
         
        'CD19_CD3': (df['Cy5_PanCK Positive Classification'] == 0) & 
                   (df['Gold_CD19 Positive Classification'] > 0) & 
                   (df['Green#2_CD3 Positive Classification'] > 0) & 
                   (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'CD19_CD68': (df['Cy5_PanCK Positive Classification'] == 0) & 
                     (df['Gold_CD19 Positive Classification'] > 0) & 
                     (df['Green#2_CD3 Positive Classification'] == 0) & 
                     (df['NarrowRed_CD68 Positive Classification'] > 0),

        'CD3_CD68': (df['Cy5_PanCK Positive Classification'] == 0) & 
                     (df['Gold_CD19 Positive Classification'] == 0) & 
                     (df['Green#2_CD3 Positive Classification'] > 0) & 
                     (df['NarrowRed_CD68 Positive Classification'] > 0),

        # Empty line for spacing
        'PanCK_CD3': (df['Cy5_PanCK Positive Classification'] > 0) & 
                            (df['Gold_CD19 Positive Classification'] == 0) & 
                            (df['Green#2_CD3 Positive Classification'] > 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'PanCK_CD68': (df['Cy5_PanCK Positive Classification'] > 0) & 
                            (df['Gold_CD19 Positive Classification'] == 0) & 
                            (df['Green#2_CD3 Positive Classification'] == 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0),
        # Empty line for spacing
        'PanCK_CD19': (df['Cy5_PanCK Positive Classification'] > 0) & 
                     (df['Gold_CD19 Positive Classification'] > 0) & 
                     (df['Green#2_CD3 Positive Classification'] == 0) & 
                     (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'PanCK_CD3': (df['Cy5_PanCK Positive Classification'] > 0) & 
                     (df['Gold_CD19 Positive Classification'] == 0) & 
                     (df['Green#2_CD3 Positive Classification'] > 0) & 
                     (df['NarrowRed_CD68 Positive Classification'] == 0),
         
        'CD19_CD3_CD68': (df['Cy5_PanCK Positive Classification'] == 0) & 
                          (df['Gold_CD19 Positive Classification'] > 0) & 
                          (df['Green#2_CD3 Positive Classification'] > 0) & 
                          (df['NarrowRed_CD68 Positive Classification'] > 0),

        'PanCK_CD3_CD68': (df['Cy5_PanCK Positive Classification'] > 0) & 
                            (df['Gold_CD19 Positive Classification'] == 0) & 
                            (df['Green#2_CD3 Positive Classification'] > 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0),
        # Empty line for spacing
        'PanCK_CD19_CD3': (df['Cy5_PanCK Positive Classification'] > 0) & 
                          (df['Gold_CD19 Positive Classification'] > 0) & 
                          (df['Green#2_CD3 Positive Classification'] > 0) & 
                          (df['NarrowRed_CD68 Positive Classification'] == 0),
        # Empty line for spacing
        'PanCK_CD19_CD68': (df['Cy5_PanCK Positive Classification'] > 0) & 
                            (df['Gold_CD19 Positive Classification'] > 0) & 
                            (df['Green#2_CD3 Positive Classification'] == 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0),

        'all_tumour_cells': (df['Cy5_PanCK Positive Classification'] >= 0) & 
                      (df['Gold_CD19 Positive Classification']  >= 0) & 
                      (df['Green#2_CD3 Positive Classification'] >= 0) & 
                      (df['NarrowRed_CD68 Positive Classification'] >= 0) &
                      (df['Classifier Label'] == 'Tumour'),

        'PanCK_only_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) &  
                              (df['Gold_CD19 Positive Classification'] == 0) & 
                              (df['Green#2_CD3 Positive Classification'] == 0) & 
                              (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                              (df['Classifier Label'] == 'Tumour'),
                              
        'CD19_only_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                           (df['Gold_CD19 Positive Classification'] > 0) & 
                           (df['Green#2_CD3 Positive Classification'] == 0) & 
                           (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                           (df['Classifier Label'] == 'Tumour'),
                           
        'CD3_only_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                           (df['Gold_CD19 Positive Classification'] == 0) & 
                           (df['Green#2_CD3 Positive Classification'] > 0) & 
                           (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                           (df['Classifier Label'] == 'Tumour'),
                           
        'CD68_only_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                            (df['Gold_CD19 Positive Classification'] == 0) & 
                            (df['Green#2_CD3 Positive Classification'] == 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                            (df['Classifier Label'] == 'Tumour'),
                            
        'CD3_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                            (df['Gold_CD19 Positive Classification'] == 0) & 
                            (df['Green#2_CD3 Positive Classification'] > 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                            (df['Classifier Label'] == 'Tumour'),
                            
        'CD3_CD19_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                            (df['Gold_CD19 Positive Classification'] > 0) & 
                            (df['Green#2_CD3 Positive Classification'] > 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                            (df['Classifier Label'] == 'Tumour'),
                            
        'CD19_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                            (df['Gold_CD19 Positive Classification'] > 0) & 
                            (df['Green#2_CD3 Positive Classification'] == 0) & 
                            (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                            (df['Classifier Label'] == 'Tumour'),

    'PanCK_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                          (df['Gold_CD19 Positive Classification'] == 0) & 
                          (df['Green#2_CD3 Positive Classification'] == 0) & 
                          (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                          (df['Classifier Label'] == 'Tumour'),

    'PanCK_CD19_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                          (df['Gold_CD19 Positive Classification'] > 0) & 
                          (df['Green#2_CD3 Positive Classification'] == 0) & 
                          (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                          (df['Classifier Label'] == 'Tumour'),

    'PanCK_CD3_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                         (df['Gold_CD19 Positive Classification'] == 0) & 
                         (df['Green#2_CD3 Positive Classification'] > 0) & 
                         (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                         (df['Classifier Label'] == 'Tumour'),

      'PanCK_CD3_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                               (df['Gold_CD19 Positive Classification'] == 0) & 
                               (df['Green#2_CD3 Positive Classification'] > 0) & 
                               (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                               (df['Classifier Label'] == 'Tumour'),

    'PanCK_CD19_CD3_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                              (df['Gold_CD19 Positive Classification'] > 0) & 
                              (df['Green#2_CD3 Positive Classification'] > 0) & 
                              (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                              (df['Classifier Label'] == 'Tumour'),

    'PanCK_CD19_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] > 0) & 
                               (df['Gold_CD19 Positive Classification'] > 0) & 
                               (df['Green#2_CD3 Positive Classification'] == 0) & 
                               (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                               (df['Classifier Label'] == 'Tumour'),

    'CD19_CD3_CD68_Tumour': (df['Cy5_PanCK Positive Classification'] == 0) & 
                             (df['Gold_CD19 Positive Classification'] > 0) & 
                             (df['Green#2_CD3 Positive Classification'] > 0) & 
                             (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                             (df['Classifier Label'] == 'Tumour'),

    'all_stromal_cells': (df['Cy5_PanCK Positive Classification'] >= 0) & 
                         (df['Gold_CD19 Positive Classification'] >= 0) & 
                         (df['Green#2_CD3 Positive Classification'] >= 0) & 
                         (df['NarrowRed_CD68 Positive Classification'] >= 0) & 
                         (df['Classifier Label'] == 'Stroma'),
                         
                         
    'PanCK_only_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) &  
                 (df['Gold_CD19 Positive Classification'] == 0) & 
                 (df['Green#2_CD3 Positive Classification'] == 0) & 
                 (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                 (df['Classifier Label'] == 'Stroma'),
                 
    'CD19_only_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] > 0) & 
                (df['Green#2_CD3 Positive Classification'] == 0) & 
                (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                (df['Classifier Label'] == 'Stroma'),
                
      'CD3_only_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] == 0) & 
                (df['Green#2_CD3 Positive Classification'] > 0) & 
                (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                (df['Classifier Label'] == 'Stroma'),
                
      'CD68_only_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] == 0) & 
                (df['Green#2_CD3 Positive Classification'] == 0) & 
                (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                (df['Classifier Label'] == 'Stroma'),
                
      'CD3_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] == 0) & 
                (df['Green#2_CD3 Positive Classification'] > 0) & 
                (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                (df['Classifier Label'] == 'Stroma'),
                
      'CD3_CD19_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] > 0) & 
                (df['Green#2_CD3 Positive Classification'] > 0) & 
                (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                (df['Classifier Label'] == 'Stroma'),
                
      'CD19_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                (df['Gold_CD19 Positive Classification'] > 0) & 
                (df['Green#2_CD3 Positive Classification'] == 0) & 
                (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
               (df['Gold_CD19 Positive Classification'] == 0) & 
               (df['Green#2_CD3 Positive Classification'] == 0) & 
               (df['NarrowRed_CD68 Positive Classification'] > 0) & 
               (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD19_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
               (df['Gold_CD19 Positive Classification'] > 0) & 
               (df['Green#2_CD3 Positive Classification'] == 0) & 
               (df['NarrowRed_CD68 Positive Classification'] == 0) & 
               (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD3_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
               (df['Gold_CD19 Positive Classification'] == 0) & 
               (df['Green#2_CD3 Positive Classification'] > 0) & 
               (df['NarrowRed_CD68 Positive Classification'] == 0) & 
               (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD3_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
                  (df['Gold_CD19 Positive Classification'] == 0) & 
                  (df['Green#2_CD3 Positive Classification'] > 0) & 
                  (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                  (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD19_CD3_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
                 (df['Gold_CD19 Positive Classification'] > 0) & 
                 (df['Green#2_CD3 Positive Classification'] > 0) & 
                 (df['NarrowRed_CD68 Positive Classification'] == 0) & 
                 (df['Classifier Label'] == 'Stroma'),

    'PanCK_CD19_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] > 0) & 
                  (df['Gold_CD19 Positive Classification'] > 0) & 
                  (df['Green#2_CD3 Positive Classification'] == 0) & 
                  (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                  (df['Classifier Label'] == 'Stroma'),

    'CD19_CD3_CD68_Stroma': (df['Cy5_PanCK Positive Classification'] == 0) & 
                 (df['Gold_CD19 Positive Classification'] > 0) & 
                 (df['Green#2_CD3 Positive Classification'] > 0) & 
                 (df['NarrowRed_CD68 Positive Classification'] > 0) & 
                 (df['Classifier Label'] == 'Stroma'),                   
                     
    }

    # Filters where an empty column should be added after
    empty_columns_after = {'all_cells', 'CD68_only', 'CD3_CD68', 'PanCK_CD3', 'PanCK_CD19_CD68', 'all_tumour_cells', 'CD68_only_Tumour', 'CD19_CD68_Tumour', 'CD19_CD3_CD68_Tumour', 'all_stromal_cells', 'CD68_only_Stroma', 'CD19_CD68_Stroma', 'CD19_CD3_CD68_Stroma'}

    # Apply filters and store counts
    counts = {key: len(df[filters[key]]) for key in filters}

    # Get denominator (all_cells count)
    all_cells_count = counts.get('all_cells', 1)  # Avoid division by zero
    all_tumour_count = counts.get('all_tumour_cells', 1)  # Handle possible naming variations
    all_stroma_count = counts.get('all_stromal_cells', 1)

    data = {'File Name': [os.path.basename(file_path)]}
    for key, value in counts.items():
        data[key] = [value]
        
        # Determine appropriate denominator
        if '_Tumour' in key:
            denominator = all_tumour_count
        elif '_Stroma' in key:
            denominator = all_stroma_count
        else:
            denominator = all_cells_count
        
        # Compute percentage
        data[f"% {key}"] = [round((value / denominator) * 100, 3) if denominator > 0 else 0]
        
        if key in empty_columns_after:
            data[f"Unnamed_{key}"] = [None]  # Insert an unnamed empty column
        
        if key == 'CD68_only':
            Tils = counts.get('CD3_only', 0) + counts.get('CD19_only', 0)
            data['Tils'] = [Tils]
            data['%Tils'] = [round((Tils / all_cells_count) * 100,3) if all_cells_count > 0 else 0]
        
        if key == 'CD68_only_Tumour':
            Tils = counts.get('CD3_only_Tumour', 0) + counts.get('CD19_only_Tumour', 0)
            data['Tils_tumour'] = [Tils]
            data['%Tils_tumour'] = [round((Tils / all_tumour_count) * 100,3) if all_tumour_count > 0 else 0]
        
        if key == 'CD68_only_Stroma':
            Tils = counts.get('CD3_only_Stroma', 0) + counts.get('CD19_only_Stroma', 0)
            data['Tils_stroma'] = [Tils]
            data['%Tils_stroma'] = [round((Tils / all_stroma_count) * 100,3) if all_stroma_count > 0 else 0]

    # Create DataFrame for the current file
    results_df = pd.DataFrame(data)

    # Remove column names for empty columns before saving
    results_df.columns = ["" if col.startswith("Unnamed_") else col for col in results_df.columns]

    # Append the results to the list
    all_results.append(results_df)

# Concatenate all results into a single DataFrame
final_results_df = pd.concat(all_results, ignore_index=True)

# Save to Excel
output_file_path = r"C:\Users\smera\Downloads\ICP_data.xlsx"
final_results_df.to_excel(output_file_path, index=False, sheet_name='Results')

print(f"Results saved to {output_file_path}")
